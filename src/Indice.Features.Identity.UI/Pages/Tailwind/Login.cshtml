@page "/login"

@model BaseLoginModel

@inject IIdentityViewLocalizer Localizer
@inject ExtendedUserManager<User> userManager

@{
    var title = ViewData["Title"] = Localizer["Login"].Value;
}

<div class="content-wrapper">
    <div class="card-wrapper">
        <vc:page-heading title="@title" image-src="" />
        <partial name="_ValidationSummary" />

        @if (Model.UiOptions.EnableLocalLogin)
        {
            <form asp-route-returnUrl="@Model.View.ReturnUrl" method="POST" class="form">
                <input type="hidden" asp-for="Input.ReturnUrl" />
                <input type="hidden" asp-for="Input.DeviceId" />
                <div class="row">
                    <div class="input-group-w-full group">
                        <input type="text" class="peer" placeholder="@Localizer[userManager.EmailAsUserName ? "Email" : "Username"]" asp-for="Input.UserName" />
                        <label asp-for="Input.UserName" class="peer-focus:-translate-y-[6px] peer-focus:visible absolute">@Localizer[userManager.EmailAsUserName ? "Email" : "Username"]</label>
                        <span asp-validation-for="Input.UserName" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="input-group-w-full">
                        <input type="password" class="peer" placeholder="@Localizer["Password"]" asp-for="Input.Password" autocomplete="off" />
                        <label asp-for="Input.Password" class="peer-focus:-translate-y-[6px] peer-focus:visible absolute">@Localizer["Password"]</label>
                        <span asp-validation-for="Input.Password" class="text-danger"></span>
                    </div>
                </div>
                <div class="flex flex-wrap justify-center md:justify-between items-center flex-row w-full">
                    @if (Model.UiOptions.AllowRememberLogin)
                    {
                        <div class="flex items-center justify-center sm:justify-start flex-auto">
                            <label asp-for="Input.RememberLogin" class="mx-1">
                                <input asp-for="Input.RememberLogin" type="checkbox" class="w-4 h-4" />
                                @Localizer["Remember me"]
                            </label>
                        </div>

                    }
                    @if (Model.UiOptions.EnableForgotPasswordPage)
                    {
                        <a asp-page="/ForgotPassword" asp-route-returnUrl="@(!string.IsNullOrEmpty(Model.View.ReturnUrl) ? Model.View.ReturnUrl : null)">@Localizer["Forgot password?"]</a>
                    }
                </div>
                <div class="flex justify-center items-center mt-8">
                    <button class="btn btn-primary" name="button" value="login" type="submit">@Localizer["Sign in"]</button>
                </div>
            </form>
        }
        <div class="px-8">
            <div class="my-10">
                @if (!Model.UiOptions.EnableLocalLogin && !Model.View.VisibleExternalProviders.Any())
                {
                    <div class="alert alert-warning">
                        <strong>@Localizer["Invalid login request"]</strong>
                        @Localizer["There are no login schemes configured for this client."]
                    </div>
                }
                @if (Model.View.VisibleExternalProviders.Any())
                {
                    <div class="hr-sect"><span>@Localizer["OR"]</span></div>
                    <div class="flex justify-center mb-2.5">
                        <span class="text-gray-400">@Localizer["login with"]</span>
                    </div>
                    <div class="flex flex-wrap justify-center pb-2">
                        @foreach (var provider in Model.View.VisibleExternalProviders)
                        {
                            <div class="idp idp-@provider.AuthenticationScheme!.ToLower() mx-2.5">
                                <a asp-page="/Challenge" asp-route-provider="@provider.AuthenticationScheme" asp-route-returnUrl="@Model.View.ReturnUrl" asp-route-prompt="@OidcConstants.PromptModes.SelectAccount">
                                </a>
                            </div>
                        }
                    </div>
                    <hr />
                }
            </div>
            @if (Model.UiOptions.EnableRegisterPage || Model.UiOptions.HasCustomOnBoarding)
            {
                <div class="flex flex-col mb-10">
                    <span>
                        @Localizer["Don't have an account?"]
                    </span>
                    <a asp-page="@Model.UiOptions.OnBoardingPage" class="text-primary-default underline" asp-route-returnUrl="@(!string.IsNullOrEmpty(Model.View.ReturnUrl) ? Model.View.ReturnUrl : null)">
                        @Localizer["Join us"]
                    </a>
                </div>
            }
            <partial name="_LanguageSelector" />
        </div>
    </div>
</div>

@section scripts {
    <partial name="_ValidationScripts" />
    <script csp-nonce="true">
        document.querySelectorAll('.idp a').forEach(function (el) {
            el.onclick = function (link) {
                if (!link.target.classList.contains('disabled')) {
                    link.target.classList.add('disabled');
                }
            };
        });
    </script>
    @if (Model.View.GenerateDeviceId)
    {
        <script type="text/javascript" src="/lib/@@fingerprintjs/fingerprintjs/dist/fp.min.js" csp-nonce></script>
        <script type="text/javascript" src="/js/mfa.js" csp-nonce></script>
        <script type="text/javascript" csp-nonce>
            $(document).ready(function () {
                var viewModelParameters = {
                    $deviceIdInput: $('#Input_DeviceId'),
                    browserFamily: '@Request.GetBrowserName()'
                };
                var viewModel = new indice.mfaViewModelFactory(viewModelParameters);
                viewModel.init();
                viewModel.calculateDeviceId();
            });
        </script>
    }
}
